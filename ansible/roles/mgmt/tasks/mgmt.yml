---
- name: Copy files (Mgmt)
  copy:
    src: "{{ item.src }}"
    dest: "~{{ item.name }}/{{ item.dst }}"
    owner: "{{ item.name }}"
    mode: '0750'
  with_items:
    - { name: "postgres", src: "sql/pgmgmt.sql", dst: "pgmgmt.sql" }
    - { name: "{{ os.user }}", src: "api/api.py", dst: "api.py" }
    - { name: "{{ os.user }}", src: "api/api.html", dst: "api.html" }
- name: Copy files (Mgmt)
  template:
    src: "{{ item }}.j2"
    dest: "~{{ os.user }}/{{ item }}"
    owner: "{{ os.user }}"
    mode: '0750'
  with_items:
    - api.env
- name: Create Systemd units
  copy:
    src: "api/{{ item }}"
    dest: "/lib/systemd/system/{{ item }}"
    owner: "root"
    mode: '640'
  with_items:
    - api-pg-mgmt.service
  notify: 
    - start api
- name: Create database for management (Mgmt)
  postgresql_db:
    name: "{{ pgmgmt.db }}"
  become: yes
  become_user: postgres
- name: Create role (Mgmt)
  postgresql_user:
    db: "{{ pgmgmt.db }}"
    name: "{{ pgmgmt.user }}"
    password: "{{ pgmgmt.pass }}"
    priv: "ALL"
    expires: infinity
  become: yes
  become_user: postgres
- name: Restore database from dump (Mgmt)
  postgresql_db:
    name: "{{ pgmgmt.db }}"
    state: restore
    target: "~postgres/pgmgmt.sql"
  become: yes
  become_user: postgres
- name: Change privileges in public (Mgmt)
  postgresql_privs:
    db: "{{ pgmgmt.db }}"
    schema: pgq
    privs: ALL
    type: "{{ item }}"
    objs: ALL_IN_SCHEMA
    role: "{{ pgmgmt.user }}"
  with_items:
    - function
    - sequence
    - table
  become: yes
  become_user: postgres
- name: Change privileges in pgq (Mgmt)
  postgresql_privs:
    db: "{{ pgmgmt.db }}"
    schema: public
    privs: ALL
    type: "{{ item }}"
    objs: ALL_IN_SCHEMA
    role: "{{ pgmgmt.user }}"
  with_items:
    - function
    - sequence
    - table
  become: yes
  become_user: postgres
- name: Create a queue (Mgmt)
  postgresql_query:
    db: pgmgmt
    query: "SELECT * FROM pgq.create_queue('{{ item }}')"
  loop:
    - "pg"
    - "mysql"
  become: yes
  become_user: postgres
- name: Create htpasswd
  shell: "htpasswd -b -c /etc/nginx/.htpasswd {{ api.user }} {{ api.pass }}"
